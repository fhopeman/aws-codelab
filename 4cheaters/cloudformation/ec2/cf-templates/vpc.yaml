---
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  TeamName:
    Type: String
  DnsRootDomain:
    Type: String
  VpcCidr:
    Type: String
  VpcSubnet1Cidr:
    Type: String
  VpcSubnet2Cidr:
    Type: String
  VpcSubnet3Cidr:
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: false
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${TeamName}"

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # dns zone of VPC -> delegation has to be configured in the root dns zone
  Route53HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Sub "${TeamName}.${DnsRootDomain}"

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${TeamName}-route-table-public"

  RoutePublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Subnet1Public:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref VpcSubnet1Cidr
      AvailabilityZone: !Select [ 0, { "Fn::GetAZs": { Ref: "AWS::Region" } } ]
      Tags:
      - Key: Name
        Value: !Sub "${TeamName}-public-1"
  RouteTableAssociation1Public:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1Public
      RouteTableId: !Ref RouteTable

  Subnet2Public:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref VpcSubnet2Cidr
      AvailabilityZone: !Select [ 1, { "Fn::GetAZs": { Ref: "AWS::Region" } } ]
      Tags:
      - Key: Name
        Value: !Sub "${TeamName}-public-2"
  RouteTableAssociation2Public:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2Public
      RouteTableId: !Ref RouteTable

  Subnet3Public:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref VpcSubnet3Cidr
      AvailabilityZone: !Select [ 2, { "Fn::GetAZs": { Ref: "AWS::Region" } } ]
      Tags:
      - Key: Name
        Value: !Sub "${TeamName}-public-3"
  RouteTableAssociation3Public:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet3Public
      RouteTableId: !Ref RouteTable

Outputs:
  VPCId:
    Export:
      Name: !Sub "${AWS::StackName}-vpc-id"
    Value: !Ref VPC
  VPCCidr:
      Export:
        Name: !Sub "${AWS::StackName}-vpc-cidr"
      Value: !Ref VpcCidr
  HostedZoneId:
    Export:
      Name: !Sub "${AWS::StackName}-hosted-zone-id"
    Value: !Ref Route53HostedZone
  HostedZoneName:
    Export:
      Name: !Sub "${AWS::StackName}-hosted-zone-name"
    Value: !Sub "${TeamName}.${DnsRootDomain}"
  Subnet1PublicId:
    Export:
      Name: !Sub "${AWS::StackName}-subnet-1-public-id"
    Value: !Ref Subnet1Public
  Subnet2PublicId:
    Export:
      Name: !Sub "${AWS::StackName}-subnet-2-public-id"
    Value: !Ref Subnet2Public
  Subnet3PublicId:
    Export:
      Name: !Sub "${AWS::StackName}-subnet-3-public-id"
    Value: !Ref Subnet3Public
